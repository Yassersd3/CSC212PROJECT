package CSC212_PROJECT;

import java.util.Scanner;

public class TestMenu {

    static Driver driver;
    static Query query;
    static QueryBST queryBST;
    static Ranking ranking;

    public static void main(String[] args) {
        // Initialize the driver and other components
        driver = new Driver();
        driver.Load_stopWords("stop.txt");
        driver.load_all_doc("dataset.csv");

        query = new Query(driver.inverted);
        queryBST = new QueryBST(driver.invertedBST);
        ranking = new Ranking(driver.invertedBST);

        // Create a menu for user interaction
        Scanner input = new Scanner(System.in);
        int choice;
        do {
            choice = displayMenu(input);
            switch (choice) {
                case 1:
                    handleBooleanRetrieval(input);
                    break;
                case 2:
                    handleRankedRetrieval(input);
                    break;
                case 3:
                    displayIndexedDocuments();
                    break;
                case 4:
                    displayIndexedTokens();
                    break;
                case 5:
                    System.out.println("Exiting the program...");
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        } while (choice != 5);

        input.close();
    }

    // Display the menu options
    public static int displayMenu(Scanner input) {
        System.out.println("\n========== Search Engine Test Menu ==========");
        System.out.println("1. Boolean Retrieval");
        System.out.println("2. Ranked Retrieval");
        System.out.println("3. Display Indexed Documents");
        System.out.println("4. Display Indexed Tokens");
        System.out.println("5. Exit");
        System.out.print("Enter your choice: ");
        return input.nextInt();
    }

    // Handle Boolean Retrieval
    public static void handleBooleanRetrieval(Scanner input) {
        input.nextLine(); // Clear the buffer
        System.out.print("Enter a Boolean query (e.g., 'market AND sports'): ");
        String queryInput = input.nextLine();
        Linkedlist<Integer> result = query.BothQuerys(queryInput);
        System.out.println("Matching Document IDs:");
        driver.displayDocByIds(result);
    }

    // Handle Ranked Retrieval
    public static void handleRankedRetrieval(Scanner input) {
        input.nextLine(); // Clear the buffer
        System.out.print("Enter a ranked query: ");
        String queryInput = input.nextLine();
        ranking.query = queryInput;
        ranking.proccess();
        System.out.println("Ranked Results:");
        ranking.display();
    }

    // Display Indexed Documents
    public static void displayIndexedDocuments() {
        System.out.println("Indexed Documents:");
        driver.index1.displayDocs();
    }

    // Display Indexed Tokens
    public static void displayIndexedTokens() {
        System.out.println("Indexed Vocabulary and Tokens:");
        driver.inverted.display();
        System.out.println("\nNumber of Tokens: " + driver.numberOfTokens);
        System.out.println("Number of Vocabulary Terms: " + driver.numberOfVocabs);
    }
}
